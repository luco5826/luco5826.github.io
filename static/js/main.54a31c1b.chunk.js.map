{"version":3,"sources":["assets/GxP.png","components/Table/Table.js","App.js","components/Corner/Corner.js","index.js"],"names":["module","exports","Table","numbers","selectedCell","selectedStyle","backgroundColor","color","padding","nonSelectedStyle","map","row","index","key","element","val","style","isSelected","onClick","Corner","position","zIndex","width","height","top","right","transform","className","i","j","push","App","setState","extracted","extractNumber","availableNumbers","flat","filter","el","length","Math","floor","random","colorChanged","event","target","value","state","this","type","onChange","alt","src","logo","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,iC,kMC8B5BC,MA1Bf,YAAkD,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,aAEhBC,EAAgB,CAAEC,gBAFqB,EAATC,MAEYA,MAAO,QAASC,QAAS,QACnEC,EAAmB,CAAEH,gBAAiB,QAASC,MAAO,QAASC,QAAS,QAE9E,OAEI,+BACI,+BACKL,EAAQO,KAAI,SAACC,EAAKC,GAAN,OACT,wBAAIC,IAAKD,GACJD,EAAID,KAAI,SAAAI,GAAO,OACZ,wBAAID,IAAKC,EAAQC,IACjBC,MAAOF,EAAQG,WAAaZ,EAAgBI,EAC5CS,QAAS,kBAAMd,EAAaU,KACvBA,EAAQC,eCEzC,ICIeI,MAvBf,YAA4B,IAElBH,EAAQ,CACVI,SAAU,QACVC,QAAS,EACTC,MAAO,SACPC,OAAQ,SACRC,IAAK,SACLC,MAAO,SACPC,UAAW,gBACXpB,gBAVmB,EAATC,OAcd,OACI,yBACIoB,UAAU,kBACVX,MAAOA,K,gBDCbb,EAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxCyB,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACtB1B,EAAQyB,GAAGE,KAAK,CAAEf,IAAS,GAAJa,EAASC,EAAI,EAAGZ,YAAY,I,IAkFxCc,E,YAzEb,aAAe,IAAD,8BACZ,+CASF3B,aAAe,SAACU,GACdA,EAAQG,YAAcH,EAAQG,WAE9B,EAAKe,SAAS,CACZ7B,UACA8B,UAAWnB,EAAQG,WAAaH,EAAQC,IAAM,QAfpC,EAmBdmB,cAAgB,WAGd,IAAMC,EAAmBhC,EAAQiC,OAAOC,QAAO,SAAAC,GAAE,OAAKA,EAAGrB,cAEzD,GAAgC,IAA5BkB,EAAiBI,OAArB,CAKA,IACMzB,EAAUqB,EADFK,KAAKC,MAAMD,KAAKE,SAAWP,EAAiBI,SAG1D,EAAKnC,aAAaU,GAClB,EAAKkB,SAAS,CAAEC,UAAWnB,EAAQC,QAjCvB,EAoCd4B,aAAe,SAACC,GACd,EAAKZ,SAAS,CAAEzB,MAAOqC,EAAMC,OAAOC,SAlCpC,EAAKC,MAAQ,CACX5C,QAASA,EACT8B,UAAW,KACX1B,MAAO,WANG,E,sEA4CZ,OACE,yBAAKoB,UAAU,OACb,yBAAKA,UAAU,kBACb,2CACA,kBAAC,EAAD,CACExB,QAAS6C,KAAKD,MAAM5C,QACpBC,aAAc4C,KAAK5C,aACnBG,MAAOyC,KAAKD,MAAMxC,QACpB,6BACE,4BACEW,QAAS8B,KAAKd,eADhB,UAIA,2BAAOe,KAAK,QAAQC,SAAUF,KAAKL,iBAGvC,6BACE,gDAAyB,6BACzB,wBACEhB,UAAU,aAAaqB,KAAKD,MAAMd,WACpC,yBAAKkB,IAAI,OAAOC,IAAKC,MACrB,kBAAC,EAAD,CACE9C,MAAOyC,KAAKD,MAAMxC,c,GApEZ+C,IAAMC,WE1BxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.54a31c1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GxP.f404f204.png\";","import React from \"react\";\nimport \"./Table.css\";\n\n\nfunction Table({ numbers, selectedCell, color }) {\n\n    const selectedStyle = { backgroundColor: color, color: \"white\", padding: \"10px\" };\n    const nonSelectedStyle = { backgroundColor: \"white\", color: \"black\", padding: \"10px\" };\n    \n    return (\n\n        <table >\n            <tbody>\n                {numbers.map((row, index) =>\n                    <tr key={index}>\n                        {row.map(element =>\n                            <td key={element.val}\n                            style={element.isSelected ? selectedStyle : nonSelectedStyle}\n                            onClick={() => selectedCell(element)}>\n                                {element.val}\n                            </td>\n                        )}\n                    </tr>\n                )}\n            </tbody>\n        </table>\n\n    );\n}\n\nexport default Table;\n","import React from \"react\";\nimport \"./App.css\";\nimport Table from \"./components/Table/Table\";\nimport Corner from \"./components/Corner/Corner\";\nimport logo from \"./assets/GxP.png\";\n\n// console.time(\"creation\");\n// const numbers = [\n//   Array.from({ length: 10 }, (v, k) => k = { val: k + 1, isSelected: false }),\n//   Array.from({ length: 10 }, (v, k) => k = { val: k + 1 * 10 + 1, isSelected: false }),\n//   Array.from({ length: 10 }, (v, k) => k = { val: k + 1 * 20 + 1, isSelected: false }),\n//   Array.from({ length: 10 }, (v, k) => k = { val: k + 1 * 30 + 1, isSelected: false }),\n//   Array.from({ length: 10 }, (v, k) => k = { val: k + 1 * 40 + 1, isSelected: false }),\n//   Array.from({ length: 10 }, (v, k) => k = { val: k + 1 * 50 + 1, isSelected: false }),\n//   Array.from({ length: 10 }, (v, k) => k = { val: k + 1 * 60 + 1, isSelected: false }),\n//   Array.from({ length: 10 }, (v, k) => k = { val: k + 1 * 70 + 1, isSelected: false }),\n//   Array.from({ length: 10 }, (v, k) => k = { val: k + 1 * 80 + 1, isSelected: false })\n// ];\n// console.timeEnd(\"creation\");\n\nconst numbers = [[], [], [], [], [], [], [], [], [],];\nfor (let i = 0; i < 9; i++)\n  for (let j = 0; j < 10; j++)\n    numbers[i].push({ val: i * 10 + j + 1, isSelected: false });\n\n// const numbers = [[], [], [], [], [], [], [], [], [],];\n// for (let i = 0; i < 90; i++) {\n//   numbers[Math.floor(i / 10)].push({ val: i  + 1, isSelected: false });\n// }\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      numbers: numbers,\n      extracted: \"00\",\n      color: \"#FF0000\"\n    }\n  }\n\n  selectedCell = (element) => {\n    element.isSelected = !element.isSelected;\n\n    this.setState({\n      numbers,\n      extracted: element.isSelected ? element.val : \"00\"\n    });\n  }\n\n  extractNumber = () => {\n\n    // Genero un array con solo gli elementi non ancora selezionati di numbers\n    const availableNumbers = numbers.flat().filter(el => !el.isSelected);\n\n    if (availableNumbers.length === 0) return;\n\n    // Scelgo casualmente un indice tra quelli dell'array appena selezionato ed estraggo l'elemento\n    // (Funziona perchè l'elemento estratto dal secondo array è lo stesso elemento del primo: il metodo\n    // flat() restituisce una copia dell'array, ma non una copia degli elementi in esso contenuti)\n    const index = Math.floor(Math.random() * availableNumbers.length);\n    const element = availableNumbers[index];\n\n    this.selectedCell(element);\n    this.setState({ extracted: element.val });\n  }\n\n  colorChanged = (event) => {\n    this.setState({ color: event.target.value });\n\n  }\n\n  render() {\n\n\n    return (\n      <div className=\"App\">\n        <div className=\"content-center\">\n          <h1>Tombola GxP</h1>\n          <Table\n            numbers={this.state.numbers}\n            selectedCell={this.selectedCell}\n            color={this.state.color} />\n          <div>\n            <button\n              onClick={this.extractNumber}>\n              Estrai\n            </button>\n            <input type=\"color\" onChange={this.colorChanged} />\n          </div>\n        </div>\n        <div>\n          <h2>Numero estratto:</h2><br />\n          <h1\n            className=\"extracted\">{this.state.extracted}</h1>\n          <img alt=\"logo\" src={logo}></img>\n          <Corner\n            color={this.state.color}  />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nfunction Corner({ color }) {\n\n    const style = {\n        position: \"fixed\",\n        zIndex: -2,\n        width: \"1200px\",\n        height: \"1200px\",\n        top: \"-600px\",\n        right: \"-600px\",\n        transform: \"rotate(45deg)\",\n        backgroundColor: color\n    };\n\n\n    return (\n        <div\n            className=\"corner-triangle\"\n            style={style}>\n        </div>\n\n    );\n}\n\nexport default Corner;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}